{
  "custom": {},
  "params": {
    "edit": true,
    "fill_type": "",
    "line_desc": "",
    "line_id": "",
    "line_material": "",
    "line_name": "",
    "line_weight_max": "",
    "line_weight_min": "",
    "metal_reject_tag": "",
    "metal_reject_tag_type": "",
    "site_id": "",
    "starr_unit_id": "",
    "type_id": "",
    "type_name": "",
    "weight_reject_tag": "",
    "weight_reject_tag_type": ""
  },
  "permissions": {
    "securityLevels": [
      {
        "children": [],
        "name": "Authenticated"
      }
    ],
    "type": "AllOf"
  },
  "propConfig": {
    "params.edit": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.fill_type": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.line_desc": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.line_id": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.line_material": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.line_name": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.line_weight_max": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.line_weight_min": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.metal_reject_tag": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.metal_reject_tag_type": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.sample_point_id": {
      "paramDirection": "input",
      "persistent": false
    },
    "params.site_id": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.starr_unit_id": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.type_id": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.type_name": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.weight_reject_tag": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.weight_reject_tag_type": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 652,
      "width": 880
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "Type_Dropdown"
        },
        "position": {
          "height": 36,
          "width": 256,
          "x": 161,
          "y": 10
        },
        "propConfig": {
          "props.options": {
            "binding": {
              "config": {
                "enableValueCache": false,
                "queryPath": "Weight_Q/DB_Query/Get_Type_ID",
                "returnFormat": "json"
              },
              "transforms": [
                {
                  "code": "\t\n\t# Format and sort the names \n\tformatted_names \u003d sorted([{\"value\": item[\"type_id\"], \"label\": item[\"type_name\"]} for item in value],key\u003dlambda x: x[\u0027label\u0027].lower())\n\treturn formatted_names\n\t",
                  "type": "script"
                }
              ],
              "type": "query"
            }
          },
          "props.value": {
            "binding": {
              "config": {
                "expression": "{view.params.type_id}"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "placeholder": {
            "text": "Select Type..."
          }
        },
        "type": "ia.input.dropdown"
      },
      {
        "meta": {
          "name": "Line_Entry"
        },
        "position": {
          "height": 36,
          "width": 256,
          "x": 161,
          "y": 52
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "expression": "toStr({view.params.line_name},\"\")"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "placeholder": "Enter Line Name"
        },
        "type": "ia.input.text-field"
      },
      {
        "meta": {
          "name": "Description_Entry"
        },
        "position": {
          "height": 36,
          "width": 536,
          "x": 161,
          "y": 93
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "expression": "toStr({view.params.line_desc},\"\")"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "placeholder": "Enter Description"
        },
        "type": "ia.input.text-field"
      },
      {
        "meta": {
          "name": "FillType"
        },
        "position": {
          "height": 36,
          "width": 172,
          "x": 161,
          "y": 133.5
        },
        "propConfig": {
          "props.value": {
            "binding": {
              "config": {
                "expression": "toStr({view.params.fill_type},\"\")"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "options": [
            {
              "label": "Whole Cartons",
              "value": "cartons"
            },
            {
              "label": "Individual Items",
              "value": "items"
            }
          ]
        },
        "type": "ia.input.dropdown"
      },
      {
        "meta": {
          "name": "Material_Tag"
        },
        "position": {
          "height": 39,
          "width": 721,
          "x": 158,
          "y": 218
        },
        "propConfig": {
          "props.params.initial_tag": {
            "binding": {
              "config": {
                "expression": "toStr({view.params.line_material},\"\")"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "params": {
            "buttonText": "Select a tag",
            "inputName": "Material_Tag",
            "selectedTag": ""
          },
          "path": "CORE_V/Selections/chooseHistoryTagTree"
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "STARR_Unit"
        },
        "position": {
          "height": 36,
          "width": 538,
          "x": 161,
          "y": 260
        },
        "propConfig": {
          "props.options": {
            "binding": {
              "config": {
                "parameters": {
                  "site_id": "{view.params.site_id}"
                },
                "queryPath": "Weight_Q/DB_Query/Get_STARR_Units_Dropdown",
                "returnFormat": "json"
              },
              "type": "query"
            }
          },
          "props.value": {
            "binding": {
              "config": {
                "path": "view.params.starr_unit_id"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "placeholder": {
            "text": "Select STARR Unit..."
          },
          "showClearIcon": true
        },
        "type": "ia.input.dropdown"
      },
      {
        "meta": {
          "name": "Min_Entry"
        },
        "position": {
          "height": 36,
          "width": 120,
          "x": 161,
          "y": 333
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "expression": "toStr({view.params.line_weight_min},\"\")"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "placeholder": "Enter Minimum Weight For Fixed Scale"
        },
        "type": "ia.input.text-field"
      },
      {
        "meta": {
          "name": "Max_Entry"
        },
        "position": {
          "height": 36,
          "width": 119,
          "x": 417,
          "y": 333
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "expression": "toStr({view.params.line_weight_max},\"\")"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "placeholder": "Enter Maximum Weight For Fixed Scale"
        },
        "type": "ia.input.text-field"
      },
      {
        "meta": {
          "name": "MetalRejectTag"
        },
        "position": {
          "height": 39,
          "width": 721,
          "x": 157,
          "y": 416
        },
        "propConfig": {
          "props.params.initial_tag": {
            "binding": {
              "config": {
                "expression": "toStr({view.params.metal_reject_tag},\"\")"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "params": {
            "buttonText": "Select a tag",
            "inputName": "Metal_Reject_Tag",
            "selectedTag": ""
          },
          "path": "CORE_V/Selections/chooseHistoryTagTree"
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "MetalRejectTagType"
        },
        "position": {
          "height": 35,
          "width": 441,
          "x": 150,
          "y": 451
        },
        "propConfig": {
          "props.value": {
            "binding": {
              "config": {
                "path": "view.params.metal_reject_tag_type"
              },
              "transforms": [
                {
                  "code": "\tif (not value):\n\t\treturn \u0027b\u0027\n\treturn value",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          }
        },
        "props": {
          "radios": [
            {
              "selected": true,
              "text": "Boolean",
              "value": "b"
            },
            {
              "selected": false,
              "text": "Counter",
              "value": "c"
            }
          ]
        },
        "type": "ia.input.radio-group"
      },
      {
        "meta": {
          "name": "WeightRejectTag"
        },
        "position": {
          "height": 39,
          "width": 721,
          "x": 157,
          "y": 491
        },
        "propConfig": {
          "props.params.initial_tag": {
            "binding": {
              "config": {
                "expression": "toStr({view.params.weight_reject_tag},\"\")"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "params": {
            "buttonText": "Select a tag",
            "inputName": "Weight_Reject_Tag",
            "selectedTag": ""
          },
          "path": "CORE_V/Selections/chooseHistoryTagTree"
        },
        "type": "ia.display.view"
      },
      {
        "meta": {
          "name": "WeightRejectTagType"
        },
        "position": {
          "height": 35,
          "width": 441,
          "x": 150,
          "y": 527
        },
        "propConfig": {
          "props.value": {
            "binding": {
              "config": {
                "path": "view.params.weight_reject_tag_type"
              },
              "transforms": [
                {
                  "code": "\tif (not value):\n\t\treturn \u0027b\u0027\n\treturn value",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          }
        },
        "props": {
          "radios": [
            {
              "selected": true,
              "text": "Boolean",
              "value": "b"
            },
            {
              "selected": false,
              "text": "Counter",
              "value": "c"
            }
          ]
        },
        "type": "ia.input.radio-group"
      },
      {
        "custom": {
          "exists": 0
        },
        "events": {
          "dom": {
            "onClick": {
              "config": {
                "script": "\t\n\t# Get all the parameters we need to save\n\tsite_id \t\t\t\u003d self.view.params.site_id\n\ttype_id\t\t\t\t\u003d self.getSibling(\"Type_Dropdown\").props.value\n\tline_id \t\t\t\u003d self.view.params.line_id\n\tline_name\t\t\t\u003d self.getSibling(\"Line_Entry\").props.text\n\tline_material\t\t\u003d self.getSibling(\"Material_Tag\").props.params.selectedTag\n\tline_desc\t\t\t\u003d self.getSibling(\"Description_Entry\").props.text\n\tline_weight_min \t\u003d float(self.getSibling(\"Min_Entry\").props.text)\n\tline_weight_max \t\u003d float(self.getSibling(\"Max_Entry\").props.text)\n\tedit\t\t\t\t\u003d self.view.params.edit\n\tstarr_unit_id \t\t\u003d self.getSibling(\"STARR_Unit\").props.value\n\t\n\tmetal_reject_tag \t\t\u003d self.getSibling(\"MetalRejectTag\").props.params.selectedTag\n\tmetal_reject_tag_type \t\u003d self.getSibling(\"MetalRejectTagType\").props.value\n\tweight_reject_tag \t\t\u003d self.getSibling(\"WeightRejectTag\").props.params.selectedTag\n\tweight_reject_tag_type \t\u003d self.getSibling(\"WeightRejectTagType\").props.value\n\t\t\t\n\t# Do some validation...make sure everything has been entered correctly\n\t\n\tnamedQuery \u003d \"Weight_Q/DB_Scalar/Count_Line\"\n\tparameters \u003d {\n\t\t\u0027type_id\u0027:\t\t\ttype_id, \n\t\t\u0027site_id\u0027:\t\t\tsite_id, \n\t\t\u0027line_name\u0027:\t\tline_name\n\t}\n\t\n\texists \u003d system.db.runNamedQuery(system.project.getProjectName(), namedQuery, parameters)\n\t\n\t\n\tif exists \u003e 0 and edit \u003d\u003d False:\n\t\tCORE_P.Utils.errorPopup(\u0027A line with that name already exists under the selected type and site.\u0027) \n\t\treturn\n\t\t\t\n\t\n\ttxId \u003d system.db.beginTransaction(timeout\u003d5000)\n\n\ttry:\n\t\n\t\tif edit \u003d\u003d False:\n\t\n\t\t\tnamedQuery \u003d \"Weight_Q/DB_Insert/Insert_Line\"\n\t\t\tparameters \u003d {\n\t\t\t\t\u0027type_id\u0027:\t\t\t\ttype_id, \n\t\t\t\t\u0027site_id\u0027:\t\t\t\tsite_id, \n\t\t\t\t\u0027line_name\u0027:\t\t\tline_name, \n\t\t\t\t\u0027line_desc\u0027:\t\t\tline_desc, \n\t\t\t\t\u0027line_weight_min\u0027:\t\tline_weight_min, \n\t\t\t\t\u0027line_weight_max\u0027:\t\tline_weight_max,  \n\t\t\t\t\u0027line_material\u0027:\t\tline_material,\n\t\t\t\t\u0027starr_unit_id\u0027:\t\tstarr_unit_id,\n\t\t\t\t\u0027metal_reject_tag\u0027:\t\tmetal_reject_tag,\n\t\t\t\t\u0027metal_reject_tag_type\u0027:\tmetal_reject_tag_type,\n\t\t\t\t\u0027weight_reject_tag\u0027:\tweight_reject_tag,\n\t\t\t\t\u0027weight_reject_tag_type\u0027:\tweight_reject_tag_type\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\telse:\n\t\t\n\t\t\tnamedQuery \u003d \"Weight_Q/DB_Update/Update_Line\"\n\t\t\tparameters \u003d {\n\t\t\t\t\u0027type_id\u0027:\t\t\t\ttype_id, \n\t\t\t\t\u0027site_id\u0027:\t\t\t\tsite_id, \n\t\t\t\t\u0027line_name\u0027:\t\t\tline_name, \n\t\t\t\t\u0027line_material\u0027:\t\tline_material,\n\t\t\t\t\u0027line_desc\u0027:\t\t\tline_desc, \n\t\t\t\t\u0027line_weight_min\u0027:\t\tline_weight_min, \n\t\t\t\t\u0027line_weight_max\u0027:\t\tline_weight_max, \n\t\t\t\t\u0027line_id\u0027:\t\t\t\tself.view.params.line_id,\n\t\t\t\t\u0027starr_unit_id\u0027:\t\tstarr_unit_id,\n\t\t\t\t\u0027metal_reject_tag\u0027:\t\tmetal_reject_tag,\n\t\t\t\t\u0027metal_reject_tag_type\u0027:\tmetal_reject_tag_type,\n\t\t\t\t\u0027weight_reject_tag\u0027:\tweight_reject_tag,\n\t\t\t\t\u0027weight_reject_tag_type\u0027:\tweight_reject_tag_type\t\t\t\n\t\t\t}\n\t\t\t\n\t\taffected_rows \u003d system.db.runNamedQuery(system.project.getProjectName(), namedQuery, parameters,tx\u003dtxId)\n\t\t\n\t\tmessage \u003d  \u0027Added/Edited new packaging line:\u0027 + str(parameters)\n\t\t\n\t\t# Audit log\n\t\tCORE_P.Utils.logChanges(self, \n                     \u0027AddEditPackagingLine\u0027,\n                     message, \n                     txId\u003dtxId,\n                     site_id\u003dsite_id,\n                    )\n\t\tsystem.db.commitTransaction(txId)\n                        \t\t\t\n\t\t# Update the table with lines \n\t\tsystem.perspective.sendMessage(\"update_bindings\", payload \u003d {}, scope \u003d \"page\")\n\n\t\tCORE_P.Utils.showSuccess(self, \"Saved!\") \n\t\t\n\t\tsystem.perspective.closePopup(\u0027\u0027)\n\n\texcept:\n\t\tsystem.db.rollbackTransaction(txId)\n\t\tCORE_P.Utils.errorPopup(\u0027Error adding/editing Packaging Line:\u0027 + str(namedQuery)) #  + str(sys.exc_info())\n"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "SaveButton"
        },
        "position": {
          "height": 34,
          "width": 250,
          "x": 12,
          "y": 606
        },
        "props": {
          "text": "Save Packaging Line"
        },
        "type": "ia.input.button"
      },
      {
        "events": {
          "dom": {
            "onClick": {
              "config": {
                "script": "\n\tsystem.perspective.closePopup(\u0027\u0027)"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "CancelButton"
        },
        "position": {
          "height": 34,
          "width": 250,
          "x": 268.5,
          "y": 606
        },
        "props": {
          "primary": false,
          "text": "Cancel"
        },
        "type": "ia.input.button"
      },
      {
        "events": {
          "component": {
            "onActionPerformed": {
              "config": {
                "script": "\t\t\n\t# Get all the parameters we need to delete\n\t\n\tline_id \t\t\u003d self.view.params.line_id\n\tsite_id\t\t\t\u003d self.view.params.site_id\n\n\ttxId \u003d system.db.beginTransaction(timeout\u003d5000)\n\n\ttry:\n\n\t\tnamedQuery \u003d \"Weight_Q/DB_Delete/Delete_Line\"\n\t\tparameters \u003d {\n\t\t\t\u0027line_id\u0027:\t\t\tline_id\n\t\t}\n\t\t\t\n\n\t\taffected_rows \u003d system.db.runNamedQuery(system.project.getProjectName(), namedQuery, parameters,tx\u003dtxId)\n\t\t\n\t\tmessage \u003d  \u0027Deleted packaging line:\u0027 + str(parameters)\n\t\t\n\t\t# Audit log\n\t\tCORE_P.Utils.logChanges(self, \n                     \u0027DeletePackagingLine\u0027,\n                     message, \n                     txId\u003dtxId,\n                     site_id\u003dsite_id,\n                    )\n\t\tsystem.db.commitTransaction(txId)\n                        \t\t\t\n\t\t# Update the table with lines \n\t\tsystem.perspective.sendMessage(\"update_bindings\", payload \u003d {}, scope \u003d \"page\")\n\n\t\tCORE_P.Utils.showSuccess(self, \"Deleted!\") \n\t\t\n\t\tself.props.value\u003d0\n\t\t\n\t\tsystem.perspective.closePopup(\u0027\u0027)\n\n\texcept:\n\t\tsystem.db.rollbackTransaction(txId)\n\t\tself.props.value\u003d0\n\t\tCORE_P.Utils.errorPopup(\u0027Error deleting Packaging Line:\u0027) #  + str(sys.exc_info())"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "DeleteButton"
        },
        "position": {
          "height": 34,
          "width": 127,
          "x": 736.5,
          "y": 606
        },
        "propConfig": {
          "meta.visible": {
            "binding": {
              "config": {
                "path": "view.params.edit"
              },
              "type": "property"
            }
          },
          "props.enabled": {
            "binding": {
              "config": {
                "expression": "{session.props.auth.user.userName}"
              },
              "transforms": [
                {
                  "code": "\treturn CORE_P.User.hasPermission(self, Constants_P.PROJECT[\u0027project_name\u0027], \u0027SITEADMIN\u0027)",
                  "type": "script"
                }
              ],
              "type": "expr"
            }
          }
        },
        "props": {
          "confirm": {
            "enabled": true
          },
          "disabledStyle": {
            "backgroundColor": "#FF8A8A"
          },
          "readyState": {
            "icon": {
              "style": {
                "height": "24px",
                "width": "2rem"
              }
            },
            "text": "Delete"
          },
          "style": {
            "backgroundColor": "#FF0000"
          },
          "writingState": {
            "icon": {
              "path": "material/hourglass_empty",
              "style": {
                "height": "24px",
                "width": "2rem"
              }
            },
            "text": "Deleting..."
          }
        },
        "type": "ia.input.oneshotbutton"
      },
      {
        "meta": {
          "name": "Icon"
        },
        "position": {
          "height": 95,
          "width": 115,
          "x": 738.5,
          "y": 1
        },
        "props": {
          "path": "material/construction"
        },
        "type": "ia.display.icon"
      },
      {
        "meta": {
          "name": "Type_Label"
        },
        "position": {
          "height": 32,
          "width": 140,
          "x": 12,
          "y": 11
        },
        "props": {
          "text": "Type:"
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Line_Label"
        },
        "position": {
          "height": 32,
          "width": 140,
          "x": 12,
          "y": 52
        },
        "props": {
          "text": "Line:"
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Material_Label"
        },
        "position": {
          "height": 32,
          "width": 140,
          "x": 12,
          "y": 222
        },
        "props": {
          "text": "Material Tag:"
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Description_Label"
        },
        "position": {
          "height": 32,
          "width": 140,
          "x": 13,
          "y": 93
        },
        "props": {
          "text": "Description:"
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Min_Label"
        },
        "position": {
          "height": 32,
          "width": 140,
          "x": 12,
          "y": 333
        },
        "props": {
          "text": "Weight Min:"
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Max_Label"
        },
        "position": {
          "height": 32,
          "width": 106,
          "x": 307,
          "y": 335
        },
        "props": {
          "text": "Weight Max:"
        },
        "type": "ia.display.label"
      },
      {
        "custom": {
          "help_text": "Line Min and Max Weight is only used for fixing the scale on the y axis of the daily charts.\n\nSet these accrodingly to the minimum and maximum weight values you expect to see.",
          "help_title": "Line"
        },
        "events": {
          "dom": {
            "onClick": {
              "config": {
                "script": "\tCORE_P.Utils.helpPopup(self.custom.help_text, title\u003dself.custom.help_title)"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "HelpIcon"
        },
        "position": {
          "height": 30,
          "rotate": {
            "anchor": "50% 37%"
          },
          "width": 30,
          "x": 574.979,
          "y": 336
        },
        "props": {
          "path": "material/help",
          "style": {
            "cursor": "pointer"
          }
        },
        "type": "ia.display.icon"
      },
      {
        "meta": {
          "name": "Material_Label_0"
        },
        "position": {
          "height": 32,
          "width": 140,
          "x": 12,
          "y": 262
        },
        "props": {
          "text": "STARR Unit:"
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Material_Label_1"
        },
        "position": {
          "height": 32,
          "width": 82,
          "x": 12,
          "y": 187
        },
        "props": {
          "text": "Material",
          "textStyle": {
            "fontWeight": "bold"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Material_Label_2"
        },
        "position": {
          "height": 32,
          "width": 688,
          "x": 162,
          "y": 188
        },
        "props": {
          "style": {
            "classes": "CORE_S/Page/Text"
          },
          "text": "(use EITHER a Material tag, OR select a STARR unit to get the Material of the latest Run state from)"
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Material_Label_3"
        },
        "position": {
          "height": 32,
          "width": 192,
          "x": 12,
          "y": 303
        },
        "props": {
          "text": "Graph Y-axis min/max",
          "textStyle": {
            "fontWeight": "bold"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Material_Label_5"
        },
        "position": {
          "height": 32,
          "width": 140,
          "x": 11,
          "y": 420
        },
        "props": {
          "text": "Metal Reject Tag:"
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Material_Label_7"
        },
        "position": {
          "height": 32,
          "width": 154,
          "x": 11,
          "y": 385
        },
        "props": {
          "text": "Reject counters",
          "textStyle": {
            "fontWeight": "bold"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Material_Label_6"
        },
        "position": {
          "height": 32,
          "width": 140,
          "x": 11,
          "y": 457
        },
        "props": {
          "text": "Metal Tag Type:"
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Material_Label_8"
        },
        "position": {
          "height": 32,
          "width": 140,
          "x": 11,
          "y": 495
        },
        "props": {
          "text": "Weight Reject Tag:"
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Material_Label_9"
        },
        "position": {
          "height": 32,
          "width": 140,
          "x": 11,
          "y": 532
        },
        "props": {
          "text": "Weight Tag Type:"
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Material_Label_4"
        },
        "position": {
          "height": 32,
          "width": 140,
          "x": 12,
          "y": 132.5
        },
        "props": {
          "text": "Fill type:"
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Material_Label_10"
        },
        "position": {
          "height": 32,
          "width": 437,
          "x": 342,
          "y": 135.5
        },
        "props": {
          "style": {
            "classes": "CORE_S/Page/Text"
          },
          "text": "(eg, are weighing the carton, or the individual block of cheese?)"
        },
        "type": "ia.display.label"
      }
    ],
    "meta": {
      "name": "root"
    },
    "position": {
      "x": 87.5,
      "y": -4.5
    },
    "type": "ia.container.coord"
  }
}